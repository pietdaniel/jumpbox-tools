environmentlc(){
    cat /opt/datadog/etc/environment | cut -c 5-
}

environmentuc(){
    cat /opt/datadog/etc/environment | cut -c 5- | tr '[a-z]' '[A-Z]'
}

mainroles(){
    cat /etc/update-motd.d/95-roles |\
    tail -n+5 |\
    grep -vE '^Instance Type:|^\*\*|^$' |\
    grep -Ev 'common-node|monitoring-client|dog-base|encrypted-storage' |\
    sed '/Tags:/,$d' |\
    grep -v "Roles:" |\
    paste -d',' -s -
}

maintags() {
    cat /etc/update-motd.d/95-roles |\
    tail -n+5 |\
    grep -vE '^Instance Type:|^\*\*|^$' |\
    grep -Ev 'common-node|monitoring-client|dog-base|encrypted-storage' |\
    sed -n '/Tags:/,$p' |\
    grep -v "Tags:" |\
    paste -d',' -s -

}

refreshtools(){
    cd ~/.jumpbox-tools
    git pull
    ./installs.sh
    ./links.sh
    cd -
    exec zsh
}

deploytools(){
    rsync -azq --exclude '.jumpbox-tools/.git' --exclude '.oh-my-zsh/.git' --exclude '.oh-my-zsh/themes' ~/.bin ~/.config ~/.gitconfig ~/.jumpbox-tools ~/.oh-my-zsh ~/.tmux.conf ~/.zshenv ~/.zshrc $USER@$1:
}

jr(){
    IP=$(/usr/local/bin/consulkv services:catalog | grep "$1" | jq -r .Address | head -1)
    deploytools $IP
    ssh -A $IP
}

function valid_ip(){
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

ji(){
    _node_to_use=$1
    if [[ ! "$1" =~ ^i- ]]; then
		if valid_ip $1; then
			_node_to_use="$1"
		else
			_node_to_use="i-$1"
		fi
    fi
    deploytools $_node_to_use
    ssh -A $_node_to_use
}

chosts_by_role() {
    /usr/local/bin/consulkv services:catalog | grep "$1" | jq -r .Node | sort | uniq
}

pg() {
    sudo -u postgres psql -p 5433 dogdata$(environmentlc)
}

# Thanks @miketheman
howold ()
{
    if [ -f /etc/created ]; then
        created=`cat /etc/created`;
    else
        echo "Can't determine how old this node is, it must be very old!";
        exit 1;
    fi;
    _time=$(expr `date +%s` - $created);
    _days=`printf "scale=0;$_time / 86400\n" | bc -l`;
    _hours=`printf "scale=0;($_time / 3600) - ($_days * 24)\n"  | bc -l `;
    _minutes=`printf "scale=0;($_time / 60) - ($_days * 1440) - ($_hours * 60)\n" | bc -l`;
    _seconds=`printf "scale=0;$_time %% 60\n" | bc -l`;
    printf "This node was created: ";
    printf "${_days:-0}-Day(s)/${_hours:-0}-Hour(s)/";
    printf "${_minutes:-0}-Minute(s)/${_seconds:-0}-Second(s)";
    printf " ago.\n"
}

howbig() {
    cat /etc/motd | grep Instance
}

sudog () {
    sudo -u dog $@
}

sudogq () {
    sudo -u dog dogq $@
}

mq () {
    sudogq metric_query $@
}

gosource() {
    export PATH=~/code/bin:~/go/bin:$PATH
    export GOPATH=~/code
    export GOROOT=~/go
}

goinstall() {
    cd ~
    rm -rf ~/go
    rm -f go*tar.gz
    wget https://dd-pastebin.s3.amazonaws.com/leo/go1.7.3.linux-amd64.tar.gz
    tar zxf go1.7.3.linux-amd64.tar.gz -C ~/
    rm -rf ~/code
    mkdir -p ~/code/src/github.com/DataDog

    git clone git@github.com:DataDog/dd-go ~/code/src/github.com/DataDog/dd-go
    git clone git@github.com:DataDog/raclette ~/code/src/github.com/DataDog/raclette
    gosource

    go get github.com/robfig/glock
    cd -
}

knife () {
    /usr/bin/knife $1 -c /etc/chef/knife.rb ${@:2}
}

myip() {
    ip addr show eth0 | grep -oP 'inet 10.\d+.\d+.\d+' | cut -c 6-
}

lastoffset(){
    topic=$1
    partition=$2
    sudo -u kafka /usr/local/kafka/kafka_*/bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list "$(myip):9092" --topic $topic --partitions $partition --time -1
}

ksearch() {
    knife search node $1 -a ec2.placement_availability_zone -a ec2.instance_type -a tags -a roles -a uptime_in_seconds
}

jctl() {
    sudo journalctl -u $@
}

sctl() {
    sudo systemctl $@
}
